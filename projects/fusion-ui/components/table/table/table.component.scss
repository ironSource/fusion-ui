@import "../../../src/style/scss/vars/vars";
@import "../../../src/style/scss/vars/mixins";
@import "../../../src/style/scss/vars/colors";

$maxCollWidth: 350px;
$headerHeight: 30px;
$headerCellPadding: 5px 10px;
$headerBottomBorderV1: 2px solid $primary-500;
$headerBottomBorderV2: 2px solid $light-700;
$headerTopBorderV2: 1px solid $light-500;
$bodyBorder: 1px solid $light-500;
$headerBackgroundColor: $White;

@mixin arrow-sort-table ($rotate:0){
  @include icon-style('icon-sort', $dark-300, (height: 18px, width: 6px), false, true, $rotate){
    float: left;
    height: 18px;
    margin-right: 3px;
  }
}

:host.fusion-style-v1 {
  @extend %reset;
  width: 100%;
  height: 100%;
  & > div{
    overflow-x: auto;
    @extend %customScroll;
    &::-webkit-scrollbar-track {
      margin-top: $headerHeight;
    }
  }
  table {
    border: none;
    margin: 0;
    width: calc(100% - 1px);
    border-collapse: collapse;
    border-spacing: 0;
    thead {
      td {
        @extend %font14;
        color: $light-900;
        white-space: nowrap;
        position: relative;
        padding: $headerCellPadding;
        max-width: $maxCollWidth;
        fusion-icon.filterTitle {
          top: 2px;
          position: relative;
        }
        @include icon-style('info-tooltip', $light-700, 10px, false, true);
        @include icon-style('warning', $neutral-700, 11px, false, true);

        &.is-select-holder {
          width: 35px;
        }
        &.is-sort {
          cursor: pointer;
          &.asc {
            @include arrow-sort-table(180);
          }
          &.desc {
            @include arrow-sort-table();
          }
          &.asc, &.desc {
            padding-right: 16px;
          }
        }

        &.expand-column{
            width: 20px;
            span{
                display: block;
                width: 1px;
            }
        }

        ::ng-deep .filter .is-dropdown .options .is-option-label .grey {
          color: $light-700;
        }

        &:after{ // this is border bottom of header
          content:'';
          position:absolute;
          left: 0;
          bottom: -1px;
          width:100%;
        }
      }
    }

    tbody {
      overflow: auto;
      border-bottom: $bodyBorder;
      td {
        white-space: nowrap;
      }
    }
  }

  /*&.is-loading,*/
  &.is-empty{
    table{
      height: calc(100% - 1px);
    }
  }

  &.fixed-table {
    position: relative;
    display: block;
    & > div{
      overflow: auto;
      @extend %customScroll;
    }
    table{
      thead{
        border-bottom: none;
        td{
          height: $headerHeight;
          position: sticky;
          top: 0;
          z-index: getZIndexLayerOffset(normal, 3);
          background-color: $headerBackgroundColor;
          &.sticky-left{
            left: 0;
            z-index: getZIndexLayerOffset(normal, 4);
          }
        }
      }
    }
    &:after { // fig leaf for hide scroll on header
      content: '';
      position:absolute;
      right: 0;
      top: 1px;
      background-color: $headerBackgroundColor;
      width: 15px;
      height: $headerHeight;
      border-bottom: $headerBottomBorderV2;
    }
    &.is-loading:after,
    &.is-empty:after{
      display: none;
    }
  }

  .tableWrap {
    height: 100%;
      &.v1 {
          table {
              thead {
                  border-bottom: $headerBottomBorderV1;
                  @extend %font6;

                  td {
                      &:after {
                          border-bottom: $headerBottomBorderV1;
                      }
                  }
              }
          }
      }

      &.v2 {
          table {
              thead {
                  @extend %font14;
                  td {
                      height: $headerHeight;

                      &:after {
                          border-bottom: $headerBottomBorderV2;
                      }
                  }
              }
          }
      }
  }

  .is-overlay-loader-holder{
    position: absolute;
    z-index: 2;
    width: 100%;
    height: 100%;
    min-height: 100px;
    top: 0;
    background-color: rgba(255, 255, 255, 0.9);
  }

  &.on-scroll-right{
    .sticky-left.display-shadow-on-scroll{
      &::before{
        content: '';
        width: 1px;
        position: absolute;
        top: 0;
        right: 0;
        height: 100%;
        box-shadow: 2px 3px 5px 0 rgba(0, 0, 0, 0.6);
      }
    }
  }

  &.on-vertical-scroll{
    thead{
      td {
        &:after {
          box-shadow: 2px 3px 5px 0 rgba(0, 0, 0, 0.3);
        }
      }
    }
  }
}
