import {ChartDataService} from './chart.service';
import {ChartData} from './entities/chart-data';
import {ChartType} from './entities/chart-type.enum';

const mockRawData: ChartData = {
    legends: [
        {id: 'totals', value: 24688.21, displayName: 'Sum'},
        {id: 9930, value: 24688.21, displayName: 'AdColony'},
        {id: 9928, value: 19358.79, displayName: 'Vungle'},
        {id: 9935, value: 16296.92, displayName: 'AppLovin'},
        {id: 9936, value: 12255.43, displayName: 'Chartboost'},
        {id: 9899, value: 22381, displayName: 'ironSource'},
        {id: 9917, value: 9666.9, displayName: 'UnityAds'},
        {id: 9929, value: 6199.33, displayName: 'Flurry'},
        {id: 9932, value: 2472.89, displayName: 'NativeX'},
        {id: 9926, value: 1240.57, displayName: 'HyprMX'}
    ],
    data: {
        '2017-04-13': [8048.16, 1588.59, 1583.47, 1037.83, 899.56, 1582.28, 726.11, 385.66, 160.59, 84.07],
        '2017-04-14': [8458.49, 1902.16, 1375.9, 1242.31, 952.88, 1628.72, 664.01, 426.95, 177.4, 88.16],
        '2017-04-15': [7997.71, 1678.1, 1395.44, 1193.07, 810.74, 1556.24, 681.19, 410.84, 184.95, 87.14],
        '2017-04-16': [8098.79, 1824.22, 1399.59, 1109.07, 812.16, 1588.8, 697.13, 418.4, 166.78, 82.64],
        '2017-04-17': [8274.74, 1825.24, 1281.23, 1079.15, 962.45, 1682.44, 700.84, 463.31, 181.19, 98.89],
        '2017-04-18': [8148.92, 1835.68, 1323.65, 1181.38, 834.57, 1576.21, 686.56, 439.27, 181.75, 89.85],
        '2017-04-19': [8049.24, 1563.08, 1349.97, 1194.31, 931.96, 1581.99, 684.67, 480.08, 174.89, 88.29],
        '2017-04-20': [8051.27, 1817.77, 1391.99, 1194.24, 750.56, 1538.59, 654.87, 437.54, 181.44, 84.27],
        '2017-04-21': [8100.8, 1817.48, 1288.4, 1130.7, 943.76, 1527.4, 650.1, 476.39, 175.36, 91.21],
        '2017-04-22': [7809.69, 1699.39, 1151.59, 1094.15, 903.09, 1579.18, 656.18, 454.44, 177.95, 93.72],
        '2017-04-23': [8208.56, 1693.37, 1496.27, 1215.94, 802.38, 1536.2, 746.59, 431.12, 190.96, 95.73],
        '2017-04-24': [8482.93, 1860.5, 1493.19, 1172.81, 923.8, 1635.11, 694.62, 457, 164.06, 81.84],
        '2017-04-25': [8694.13, 1887.62, 1474.25, 1155.98, 851.97, 1827.26, 758.28, 463.07, 188.1, 87.6],
        '2017-04-26': [8136.61, 1695.01, 1353.85, 1295.98, 875.55, 1540.58, 665.75, 455.26, 167.47, 87.16]
    }
};
const mockLineParsed: any = {
    labels: [
        '2017-04-13',
        '2017-04-14',
        '2017-04-15',
        '2017-04-16',
        '2017-04-17',
        '2017-04-18',
        '2017-04-19',
        '2017-04-20',
        '2017-04-21',
        '2017-04-22',
        '2017-04-23',
        '2017-04-24',
        '2017-04-25',
        '2017-04-26'
    ],
    datasets: [
        {
            id: 'totals',
            label: 'Sum',
            data: [
                8048.16, 8458.49, 7997.71, 8098.79, 8274.74, 8148.92, 8049.24, 8051.27, 8100.8, 7809.69, 8208.56, 8482.93, 8694.13, 8136.61
            ],
            displayFormat: null
        },
        {
            id: 9930,
            label: 'AdColony',
            data: [
                1588.59, 1902.16, 1678.1, 1824.22, 1825.24, 1835.68, 1563.08, 1817.77, 1817.48, 1699.39, 1693.37, 1860.5, 1887.62, 1695.01
            ],
            displayFormat: null
        },
        {
            id: 9928,
            label: 'Vungle',
            data: [
                1583.47, 1375.9, 1395.44, 1399.59, 1281.23, 1323.65, 1349.97, 1391.99, 1288.4, 1151.59, 1496.27, 1493.19, 1474.25, 1353.85
            ],
            displayFormat: null
        },
        {
            id: 9935,
            label: 'AppLovin',
            data: [
                1037.83, 1242.31, 1193.07, 1109.07, 1079.15, 1181.38, 1194.31, 1194.24, 1130.7, 1094.15, 1215.94, 1172.81, 1155.98, 1295.98
            ],
            displayFormat: null
        },
        {
            id: 9936,
            label: 'Chartboost',
            data: [899.56, 952.88, 810.74, 812.16, 962.45, 834.57, 931.96, 750.56, 943.76, 903.09, 802.38, 923.8, 851.97, 875.55],
            displayFormat: null
        },
        {
            id: 9899,
            label: 'ironSource',
            data: [
                1582.28, 1628.72, 1556.24, 1588.8, 1682.44, 1576.21, 1581.99, 1538.59, 1527.4, 1579.18, 1536.2, 1635.11, 1827.26, 1540.58
            ],
            displayFormat: null
        },
        {
            id: 9917,
            label: 'UnityAds',
            data: [726.11, 664.01, 681.19, 697.13, 700.84, 686.56, 684.67, 654.87, 650.1, 656.18, 746.59, 694.62, 758.28, 665.75],
            displayFormat: null
        },
        {
            id: 9929,
            label: 'Flurry',
            data: [385.66, 426.95, 410.84, 418.4, 463.31, 439.27, 480.08, 437.54, 476.39, 454.44, 431.12, 457, 463.07, 455.26],
            displayFormat: null
        },
        {
            id: 9932,
            label: 'NativeX',
            data: [160.59, 177.4, 184.95, 166.78, 181.19, 181.75, 174.89, 181.44, 175.36, 177.95, 190.96, 164.06, 188.1, 167.47],
            displayFormat: null
        },
        {
            id: 9926,
            label: 'HyprMX',
            data: [84.07, 88.16, 87.14, 82.64, 98.89, 89.85, 88.29, 84.27, 91.21, 93.72, 95.73, 81.84, 87.6, 87.16],
            displayFormat: null
        }
    ]
};
const mockBarParsed: any = {
    labels: ['Sum', 'AdColony', 'Vungle', 'AppLovin', 'Chartboost', 'ironSource', 'UnityAds', 'Flurry', 'NativeX', 'HyprMX'],
    datasets: [
        {
            label: '2017-04-13',
            data: [8048.16, 1588.59, 1583.47, 1037.83, 899.56, 1582.28, 726.11, 385.66, 160.59, 84.07]
        },
        {
            label: '2017-04-14',
            data: [8458.49, 1902.16, 1375.9, 1242.31, 952.88, 1628.72, 664.01, 426.95, 177.4, 88.16]
        },
        {
            label: '2017-04-15',
            data: [7997.71, 1678.1, 1395.44, 1193.07, 810.74, 1556.24, 681.19, 410.84, 184.95, 87.14]
        },
        {
            label: '2017-04-16',
            data: [8098.79, 1824.22, 1399.59, 1109.07, 812.16, 1588.8, 697.13, 418.4, 166.78, 82.64]
        },
        {
            label: '2017-04-17',
            data: [8274.74, 1825.24, 1281.23, 1079.15, 962.45, 1682.44, 700.84, 463.31, 181.19, 98.89]
        },
        {
            label: '2017-04-18',
            data: [8148.92, 1835.68, 1323.65, 1181.38, 834.57, 1576.21, 686.56, 439.27, 181.75, 89.85]
        },
        {
            label: '2017-04-19',
            data: [8049.24, 1563.08, 1349.97, 1194.31, 931.96, 1581.99, 684.67, 480.08, 174.89, 88.29]
        },
        {
            label: '2017-04-20',
            data: [8051.27, 1817.77, 1391.99, 1194.24, 750.56, 1538.59, 654.87, 437.54, 181.44, 84.27]
        },
        {
            label: '2017-04-21',
            data: [8100.8, 1817.48, 1288.4, 1130.7, 943.76, 1527.4, 650.1, 476.39, 175.36, 91.21]
        },
        {
            label: '2017-04-22',
            data: [7809.69, 1699.39, 1151.59, 1094.15, 903.09, 1579.18, 656.18, 454.44, 177.95, 93.72]
        },
        {
            label: '2017-04-23',
            data: [8208.56, 1693.37, 1496.27, 1215.94, 802.38, 1536.2, 746.59, 431.12, 190.96, 95.73]
        },
        {
            label: '2017-04-24',
            data: [8482.93, 1860.5, 1493.19, 1172.81, 923.8, 1635.11, 694.62, 457, 164.06, 81.84]
        },
        {
            label: '2017-04-25',
            data: [8694.13, 1887.62, 1474.25, 1155.98, 851.97, 1827.26, 758.28, 463.07, 188.1, 87.6]
        },
        {
            label: '2017-04-26',
            data: [8136.61, 1695.01, 1353.85, 1295.98, 875.55, 1540.58, 665.75, 455.26, 167.47, 87.16]
        }
    ]
};

describe('ChartData Service', () => {
    let dataService: ChartDataService;

    beforeEach(() => {
        dataService = new ChartDataService();
    });

    it('Chart Data Service parse data for line chart', () => {
        expect(dataService.parseChartData(mockRawData, ChartType.Line)).toEqual(mockLineParsed);
    });

    it('Chart Data Service parse data for bar chart', () => {
        console.log(JSON.stringify(dataService.parseChartData(mockRawData, ChartType.Bar)));

        expect(dataService.parseChartData(mockRawData, ChartType.Bar)).toEqual(mockBarParsed);
    });
});
